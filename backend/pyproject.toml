[build-system]
requires = ["hatchling>=1.21"]
build-backend = "hatchling.build"

[project]
name = "ai-life-backend"
version = "0.1.0"
description = "AI Life OS backend (MVP)"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "fastapi[standard]>=0.115.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy[asyncio]>=2.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/ai_life_backend"]

[tool.uv]
default-groups = ["dev"]

[tool.ruff]
preview = true
target-version = "py311"
line-length = 100
src = ["src"]
extend-exclude = [".venv", ".tox", "build", "dist", "alembic/versions/*"]

[tool.ruff.lint]
select = ["E","F","W","I","UP","B","SIM","N","C90","PL","S","RUF","ANN","D","ERA","TID","RET","TRY","PT","ARG"]
ignore = ["E203","E266","D203","D213", "D103"]
per-file-ignores = { "tests/**" = ["D","ANN","S101","PLR2004","ARG001","PT011","PT012"] }

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["ai_life_backend"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
mypy_path = ["src"]
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
strict_equality = true
check_untyped_defs = true
no_implicit_reexport = true
local_partial_types = true
ignore_missing_imports = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q -ra --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = ["error::DeprecationWarning"]

[dependency-groups]
dev = [
    "ruff>=0.13.0",
    "mypy>=1.18.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-asyncio>=1.2.0",
    "httpx>=0.28.1",
    "pre-commit>=4.3.0",
]
